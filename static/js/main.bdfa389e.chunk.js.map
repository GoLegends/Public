{"version":3,"sources":["redux/store.js","commons/defines.js","components/home_screen/carousel.js","components/home_screen/home_tab_name.js","components/home_screen/recommended/recommended_item.js","components/home_screen/recommended/recommended_container.js","screens/home.js","screens/test.js","components/top_bar.js","screens/no_match.js","App.js","index.js"],"names":["history","ROUTES","ApiConstants","AutoPlaySwipeableViews","autoPlay","SwipeableViews","Carousel","props","state","carouselData","carouselIndex","Axios","get","then","resolve","setState","data","all","this","className","enableMouseEvents","onChangeIndex","index","indexLatest","map","el","key","src","_imgUrl","alt","_name","MobileStepper","activeStep","variant","steps","length","position","Component","HomeTabName","Typography","name","RecommendedItem","product","console","log","RecommendedContainer","recommendedItems","item","HomeScreen","TestScreen","TopBar","onClick","goHome","style","fontWeight","IconButton","Search","connect","dispatch","push","NoMatchScreen","Button","App","exac","path","component","render","to","createBrowserHistory","enhancer","composeWithDevTools","applyMiddleware","routerMiddleware","thunk","store","createStore","asyncInitialState","combineReducers","router","connectRouter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bdfa389e.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\r\nimport { createBrowserHistory } from 'history'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport * as asyncInitialState from 'redux-async-initial-state'\r\n\r\nconst history = createBrowserHistory()\r\n\r\nconst enhancer = composeWithDevTools(applyMiddleware(routerMiddleware(history), thunk))\r\n\r\nconst createRootReducer = (history) => asyncInitialState.outerReducer(combineReducers({\r\n    router: connectRouter(history),\r\n    asyncInitialState: asyncInitialState.innerReducer,\r\n    // app store\r\n}))\r\n\r\nconst store = createStore(createRootReducer(history), enhancer)\r\n\r\nexport {\r\n    store,\r\n    history\r\n}","export const ROUTES = {\r\n    ROOT: '/',\r\n    HOME: '/home',\r\n    TEST: '/test'\r\n}\r\n\r\nexport const ApiConstants = {\r\n    baseUrl: \"https://golegends.appspot.com\",\r\n    configurationRoute: '/configuration',\r\n    carouselSliderBannerRoute: '/games/home/carouselsliderbanner',\r\n    trendingRoute: '/games/home/trendings',\r\n    categoryRoute: '/categories',\r\n    usersLoginRoute: '/users/login',\r\n    gameDetail: (id) => `/games/${id}`,\r\n    searchGame: (name) => `/games/search/name/${name}`,\r\n}","import React, { Component } from \"react\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\n\r\nimport { ApiConstants } from \"../../commons/defines\";\r\n\r\nimport './carousel.scss'\r\n\r\nimport { MobileStepper } from '@material-ui/core';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nexport default class Carousel extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            carouselData: null,\r\n            carouselIndex: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        Axios.get(ApiConstants.baseUrl + ApiConstants.carouselSliderBannerRoute)\r\n            .then((resolve) => {\r\n                this.setState({\r\n                    carouselData: resolve.data.all\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { carouselData, carouselIndex } = this.state;\r\n        return (\r\n            <div className='carousel_container'>\r\n                {carouselData &&\r\n                    (\r\n                        <>\r\n                            <AutoPlaySwipeableViews\r\n                                enableMouseEvents\r\n                                onChangeIndex={(index, indexLatest) => {\r\n                                    this.setState({\r\n                                        carouselIndex: index\r\n                                    })\r\n                                }}\r\n                            >\r\n                                {\r\n                                    carouselData.map((el, index) => (\r\n                                        <div key={index} className='slide'>\r\n                                            <img src={el._imgUrl} alt={el._name} />\r\n                                            {/* <div className='slide_texts'>\r\n                                <Typography className='slide_name'>{el._name}</Typography>\r\n                                <Typography className='slide_desc'>{el._shortDesc}</Typography>\r\n                            </div> */}\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </AutoPlaySwipeableViews>\r\n                            <div className='mobile_stepper'>\r\n                                <MobileStepper\r\n                                    activeStep={carouselIndex}\r\n                                    variant=\"dots\"\r\n                                    steps={carouselData.length}\r\n                                    position=\"static\"\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './home_tab_name.scss'\r\n\r\nexport default class HomeTabName extends Component {\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <img src='tab_name_bg.png' className='bg' alt='bg'></img>\r\n                <Typography className='text'>{this.props.name}</Typography>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nHomeTabName.propTypes = {\r\n    name: PropTypes.string.isRequired\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class RecommendedItem extends Component {\r\n    render() {\r\n        const {product} = this.props;\r\n        console.log(product)\r\n        return (\r\n            <div>\r\n                <img src={product._imgUrl}></img>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRecommendedItem.propTypes = {\r\n    product: PropTypes.object.isRequired\r\n}","import React, { Component } from 'react'\r\nimport HomeTabName from '../home_tab_name'\r\nimport Axios from 'axios'\r\nimport { ApiConstants } from '../../../commons/defines'\r\nimport RecommendedItem from './recommended_item'\r\n\r\nimport './recommended_container.scss';\r\n\r\nexport default class RecommendedContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      recommendedItems: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(ApiConstants.baseUrl + ApiConstants.trendingRoute)\r\n      .then(resolve => {\r\n        this.setState({\r\n          recommendedItems: resolve.data.all\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { recommendedItems } = this.state\r\n    return (\r\n      <div>\r\n        <HomeTabName name={'Recommended'} />\r\n        <div className='container'>\r\n          {recommendedItems.map((item, index) => {\r\n            return <RecommendedItem key={index} product={item} />\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport {Carousel, RecommendedContainer} from \"../components/home_screen\";\r\n\r\n\r\nexport default class HomeScreen extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                home\r\n                <Carousel></Carousel>\r\n                <RecommendedContainer></RecommendedContainer>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\n\r\nexport default class TestScreen extends Component {\r\n    render() {\r\n        return <div>\r\n            test\r\n        </div>\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { push } from 'connected-react-router'\r\nimport { Typography, IconButton } from '@material-ui/core'\r\nimport { Search } from '@material-ui/icons'\r\n\r\nimport './top_bar.scss'\r\nimport { ROUTES } from \"../commons/defines\";\r\n\r\nclass TopBar extends Component {\r\n    render() {\r\n        return (\r\n            <div className='topbar'>\r\n                <img className='logo_icon' src='icon.png' alt='icon' onClick={() => { this.props.goHome() }} />\r\n                <Typography className='title' style={{ fontWeight: 'bold' }}>GoLegends</Typography>\r\n                <div>\r\n                    {/* <IconButton className='menu_button'>\r\n                        <Menu className='menu_icon' />\r\n                    </IconButton> */}\r\n                    <IconButton className='menu_button'>\r\n                        <Search className='menu_icon' />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    goHome: () => {\r\n        dispatch(push(ROUTES.HOME))\r\n    }\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar)\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { Button } from \"@material-ui/core\";\r\nimport { push } from 'connected-react-router'\r\n\r\nimport { ROUTES } from \"../commons/defines\";\r\n\r\nclass NoMatchScreen extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                NO MATCHING\r\n                <Button onClick={() => this.props.goHome()}>go home</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    goHome: () => {\r\n        dispatch(push(ROUTES.HOME))\r\n    }\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoMatchScreen)\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport HomeScreen from './screens/home';\r\nimport TestScreen from './screens/test';\r\nimport TopBar from './components/top_bar';\r\nimport NoMatchScreen from './screens/no_match';\r\nimport { ROUTES } from './commons/defines'\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <TopBar></TopBar>\r\n      <Switch>\r\n        <Route exac path={ROUTES.HOME} component={HomeScreen} />\r\n        <Route exac path={ROUTES.TEST} component={TestScreen} />\r\n        <Route exac path={ROUTES.ROOT} render={() => <Redirect to={ROUTES.HOME} />} />\r\n        <Route render={() => <NoMatchScreen />} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport { store, history } from './redux/store'\r\n\r\nconst GoApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <ConnectedRouter history={history}>\r\n                <App />\r\n            </ConnectedRouter>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nReactDOM.render(<GoApp />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}